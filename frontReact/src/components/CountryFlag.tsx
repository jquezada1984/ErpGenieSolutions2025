import React, { useState, useEffect } from 'react';
import './CountryFlag.css';

interface CountryFlagProps {
  countryCode: string;
  size?: 'small' | 'medium' | 'large';
  className?: string;
}

const CountryFlag: React.FC<CountryFlagProps> = ({ 
  countryCode, 
  size = 'medium',
  className = '' 
}) => {
  const [imageError, setImageError] = useState(false);
  const [imageLoaded, setImageLoaded] = useState(false);

  // Mapeo de c√≥digos ISO a emojis de banderas como fallback
  const flagEmojis: { [key: string]: string } = {
    'PE': 'üáµüá™', 'AR': 'üá¶üá∑', 'BR': 'üáßüá∑', 'CL': 'üá®üá±', 'CO': 'üá®üá¥',
    'MX': 'üá≤üáΩ', 'EC': 'üá™üá®', 'BO': 'üáßüá¥', 'PY': 'üáµüáæ', 'UY': 'üá∫üáæ',
    'VE': 'üáªüá™', 'GT': 'üá¨üáπ', 'HN': 'üá≠üá≥', 'SV': 'üá∏üáª', 'NI': 'üá≥üáÆ',
    'CR': 'üá®üá∑', 'PA': 'üáµüá¶', 'CU': 'üá®üá∫', 'DO': 'üá©üá¥', 'PR': 'üáµüá∑',
    'US': 'üá∫üá∏', 'CA': 'üá®üá¶', 'ES': 'üá™üá∏', 'FR': 'üá´üá∑', 'DE': 'üá©üá™',
    'IT': 'üáÆüáπ', 'GB': 'üá¨üáß', 'JP': 'üáØüáµ', 'CN': 'üá®üá≥', 'IN': 'üáÆüá≥',
    'AU': 'üá¶üá∫', 'NZ': 'üá≥üáø', 'RU': 'üá∑üá∫'
  };

  // Resetear estados cuando cambia el countryCode
  useEffect(() => {
    setImageError(false);
    setImageLoaded(false);
  }, [countryCode]);

  const handleImageLoad = () => {
    setImageLoaded(true);
    setImageError(false);
  };

  const handleImageError = () => {
    setImageLoaded(false);
    setImageError(true);
  };

  // Usar imagen local desde public/flags/
  const imageUrl = `/flags/${countryCode.toLowerCase()}.png`;

  // Si hay error con la imagen, mostrar emoji
  if (imageError) {
    const emoji = flagEmojis[countryCode.toUpperCase()] || 'üè≥Ô∏è';
    return (
      <span 
        className={`country-flag-emoji country-flag-${size} ${className}`}
        title={countryCode}
      >
        {emoji}
      </span>
    );
  }

  return (
    <>
      {/* Imagen de bandera */}
      <img
        src={imageUrl}
        alt={`Bandera de ${countryCode}`}
        className={`country-flag-image country-flag-${size} ${className} ${imageLoaded ? 'loaded' : 'loading'}`}
        onLoad={handleImageLoad}
        onError={handleImageError}
        title={countryCode}
        style={{ display: imageLoaded ? 'inline-block' : 'none' }}
      />
      
      {/* Emoji como fallback mientras carga o si falla */}
      {!imageLoaded && (
        <span 
          className={`country-flag-emoji country-flag-${size} ${className}`}
          title={countryCode}
          style={{ display: imageLoaded ? 'none' : 'inline-block' }}
        >
          {flagEmojis[countryCode.toUpperCase()] || 'üè≥Ô∏è'}
        </span>
      )}
    </>
  );
};

export default CountryFlag; 